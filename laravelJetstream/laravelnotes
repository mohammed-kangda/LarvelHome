# Install

composer require laravel/jetstream
php artisan jetstream:install livewire
npm install
npm run dev
php artisan migrate


# file structure

config->fortify->features (visible user info func)

config->jetstream->features (profile picture)


# profile pic issue

env -> APP_URL=http://127.0.0.1:8000
php artisan storage:link


# multi auth system ( admin and user )


1) php artisan make:controller AdminController

2) create admin table same as user with model

3) php artisan make:factory AdminFactory  [insert records]

4) creating guards providersa and passwd reset
config -> auth.php

5) finding vender -> laravel -> http -> controller -> AuthenticatedSessionController.php

6) In providers -> fortifyserviceprovider.php

    // Register any application services.

    public function register()
    {
        $this->app->when([AdminController::class,AttemptToAuthenticate::class,
        RedirectIfTwoFactorAuthenticatable::class])
        ->needs(StatefulGuard::class)
        ->give(function(){
           return Auth::guard('admin');
        });
    }

   [change namespaces and class names]
7) Crearting Guards file in app -> Guards -> AdminStatefulGuards.php

    copy code src-.framework StatefulGuard Interface & passed in AdminStatefulGuards.php


8) Copy AuthenticatedSessionController.php and paste in
   AdminController

9) creating routes:

    Route::group(['prefix' => 'admin', 'middleware' => ['admin:admin']],function(){
        Route::get('/login',[AdminController::class,'loginForm']);
        Route::post('/login',[AdminController::class,'store'])->name('admin.store');
    });


    Route::middleware(['auth:sanctum,admin','verified'])->get('/admin/dashboard',function(){
        return view('dashboard');
    })->name('dashboard');


    Route::middleware(['auth:sanctum,web','verified'])->get('/dashboard',function(){
        return view('dashboard');
    })->name('dashboard');

10) copy 2 files from vender->laravel->fortify->src->AttempttpoAuthenticate.php & RedirectifTwoFactorAuthenticatable.php
    paste it in app->actions->fortify

11) Creating Middleware
     providers -> RouteServiceprovider.php

        // For Admin logged in the redirect

        public static function redirectTo($guard){
            return $guard.'/dashboard';
        }

      middleware->RedirectIfAuthenticated.php

      in handle()
        foreach ($guards as $guard) {
            if (Auth::guard($guard)->check()) {
                return redirect($guard.'/dashboard');
            }
        }

        craete middleware: AdminRedirectIfAuthenticated.php

        copy RedirectIfAuthenticated & paste in AdminRedirectIfAuthenticated.php

        register in kernel:
        The application's route middleware.


12) create folder Responses && LoginResponse.php under http
    copy LoginResponse.php(laravel->fortify->resource->contracts) and paste in LoginResponse.php

    middleware [LoginResponse.php]

    <?php
    [customization]
    // namespace App\Http\Responses;

    use Laravel\Fortify\Contracts\LoginResponse as LoginResponseContract;

    class LoginResponse implements LoginResponseContract
    {
        //

        public function toResponse($request){
            return $request->wantsJson()
                ? response()->json(['two_factor' => false])
                : redirect()->intended(config('admin/dashboard'));
        }
    }

 13) Changing logout redirection:

    Admin
